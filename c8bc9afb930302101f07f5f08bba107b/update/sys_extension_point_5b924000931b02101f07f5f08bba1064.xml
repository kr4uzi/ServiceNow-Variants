<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_extension_point">
    <sys_extension_point action="INSERT_OR_UPDATE">
        <api_name>x_424426_invar.InvariantHelper</api_name>
        <description/>
        <example><![CDATA[/* global gs */
/* global Class, GlideRecord, GlideRecordSecure */
/* eslint no-undef: "error" */
var InvariantHelper = Class.create();
InvariantHelper.prototype = {
	initialize: function() {

	},

	/**
	 * checks if this extension point instance can handle the supplied scope
	 * @param {string} scopeName
	 * @return {boolean}
	 */
	handlesScope: function (scopeName) {
		var extScopeName = gs.getCurrentScopeName();
		if (['rhino.global', 'global'].includes(extScopeName)) {
			return scopeName == 'global';
		}

		return scopeName == extScopeName;
	},

	/**
	 * checks if this extension point instance can handle the supplied table
	 * @param {string} tableName
	 * @return {boolean}
	 */
	handlesTable: function (tableName) {
		var extScopeName = gs.getCurrentScopeName();
		if (['rhino.global', 'global'].includes(extScopeName)) {
			extScopeName = 'global';
		}

		var dbObjectGr = new GlideRecord('sys_db_object');
		dbObjectGr.addQuery('name', tableName);
		dbObjectGr.addQuery('sys_scope.scope', extScopeName);
		dbObjectGr.setLimit(1);
		dbObjectGr.query();
		return dbObjectGr.hasNext();
	},

	/**
	 * this function should return the field values of for the given record and field
	 * @param {GlideRecordGenerated & sys_metadata} metadataGr
	 * @param {Array.<string>} fields
	 * @return {Object}
	 */
	getFieldValues: function (metadataGr, fields) {
		var anyGr = new GlideRecordSecure(metadataGr.getRecordClassName());
		anyGr.addQuery('sys_id', metadataGr.getUniqueValue());
		anyGr.setLimit(1);
		anyGr.query();

		var values = {};
		if (anyGr.next()) {
			fields.forEach(function (field) {
				values[field] = anyGr.getValue(field);
			});
		}

		return values;
	},

	type: 'InvariantHelper'
};]]></example>
        <name>InvariantHelper</name>
        <restrict_scope>false</restrict_scope>
        <sys_class_name>sys_extension_point</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-07-04 18:04:50</sys_created_on>
        <sys_id>5b924000931b02101f07f5f08bba1064</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>InvariantHelper</sys_name>
        <sys_package display_value="Invariants" source="x_424426_invar">c8bc9afb930302101f07f5f08bba107b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Invariants">c8bc9afb930302101f07f5f08bba107b</sys_scope>
        <sys_update_name>sys_extension_point_5b924000931b02101f07f5f08bba1064</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-07-06 21:25:41</sys_updated_on>
    </sys_extension_point>
</record_update>
